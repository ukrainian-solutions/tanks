$(function() {
  var create_map, draw_tank, move_tank, my_direction, my_go, my_tank, start, start_game, stop;
  my_tank = 0;
  start = false;
  stop = true;
  my_direction = 'up';
  my_go = false;
  my_tank = false;
  create_map = function(map) {
    var div, x, y, _i, _j, _ref, _ref1, _results;
    div = $('<div/>', {
      id: 'box',
      text: 'I am box'
    });
    _results = [];
    for (x = _i = 0, _ref = map.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; x = 0 <= _ref ? ++_i : --_i) {
      for (y = _j = 0, _ref1 = map.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; y = 0 <= _ref1 ? ++_j : --_j) {
        if (map[x][y] === 0) {
          $('<div/>', {
            id: 'box',
            'class': 'box',
            'data-x': x,
            'data-y': y
          }).appendTo('body');
          continue;
        }
        if (map[x][y] === 1) {
          $('<div/>', {
            id: 'box',
            'class': 'box wall',
            'data-x': x,
            'data-y': y
          }).appendTo('body');
          continue;
        }
        if (map[x][y] === 3) {
          $('<div/>', {
            id: 'box',
            'class': 'box grass',
            'data-x': x,
            'data-y': y
          }).appendTo('body');
        }
        if (map[x][y] === 4) {
          $('<div/>', {
            id: 'box',
            'class': 'box water',
            'data-x': x,
            'data-y': y
          }).appendTo('body');
        }
      }
      _results.push($('<div/>', {
        id: 'nbox',
        'style': 'clear: both;'
      }).appendTo('body'));
    }
    return _results;
  };
  start_game = function() {
    return socket.emit('addTank', function(tank_json) {
      if (tank_json["id"] === void 0) {
        tank_json = {
          "id": tank_json[0],
          "direction": tank_json[1],
          "is_hold": tank_json[2],
          "wait": tank_json[3],
          "bullets": tank_json[4],
          "bullets_max": tank_json[5],
          "health": tank_json[6],
          "place_on_map": tank_json[7]
        };
      }
      console.log('this is tank', tank_json);
      my_tank = tank_json['id'];
      return draw_tank(tank_json);
    });
  };
  start_game();
  draw_tank = function(tank_json) {
    var div, x, y;
    if (tank_json["id"] === void 0) {
      tank_json = {
        "id": tank_json[0],
        "direction": tank_json[1],
        "is_hold": tank_json[2],
        "wait": tank_json[3],
        "bullets": tank_json[4],
        "bullets_max": tank_json[5],
        "health": tank_json[6],
        "place_on_map": tank_json[7]
      };
    }
    y = tank_json['place_on_map'][0];
    x = tank_json['place_on_map'][1];
    div = $('*[data-x=' + x.toString() + '][data-y=' + y.toString() + ']');
    div.attr('data-id_tank', tank_json['id']);
    div.html(tank_json['health']);
    if (tank_json['id'] === my_tank) {
      div.addClass('my_tank');
    } else {
      div.addClass('tank');
    }
    return div.addClass(tank_json['direction']);
  };
  move_tank = function(tank_json) {
    var tank;
    if (tank_json["id"] === void 0) {
      tank_json = {
        "id": tank_json[0],
        "direction": tank_json[1],
        "is_hold": tank_json[2],
        "wait": tank_json[3],
        "bullets": tank_json[4],
        "bullets_max": tank_json[5],
        "health": tank_json[6],
        "place_on_map": tank_json[7]
      };
    }
    tank = $('[data-id_tank=' + tank_json['id'] + ']');
    tank.html('');
    if (tank_json['id'] === my_tank) {
      tank.removeClass('my_tank');
    } else {
      tank.removeClass('tank');
    }
    tank.removeClass('left');
    tank.removeClass('right');
    tank.removeClass('down');
    tank.removeClass('up');
    tank.addClass('box');
    return draw_tank(tank_json);
  };
  $('html').keydown(function(eventObject) {
    var go, now_direct;
    now_direct = my_direction;
    go = my_go;
    if (event.keyCode === 37) {
      console.log("Ура нажали left");
      now_direct = 'left';
    }
    if (event.keyCode === 38) {
      console.log("Ура нажали up");
      now_direct = 'up';
    }
    if (event.keyCode === 39) {
      console.log("Ура нажали right");
      now_direct = 'right';
    }
    if (event.keyCode === 40) {
      console.log("Ура нажали down");
      now_direct = 'down';
    }
    if (event.keyCode === 81) {
      console.log('Ура нажали го');
      go = false;
    }
    if (event.keyCode === 87) {
      console.log('Ура нажали stop');
      go = true;
    }
    if (my_direction !== now_direct) {
      socket.emit('setDirection', now_direct, my_go);
      my_direction = now_direct;
      my_go = go;
    }
    if (my_go !== go) {
      my_go = go;
      return socket.emit('setDirection', my_direction, my_go);
    }
  });
  socket.on('tanks', function(tanks) {
    var tank, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = tanks.length; _i < _len; _i++) {
      tank = tanks[_i];
      _results.push(move_tank(tank));
    }
    return _results;
  });
  socket.on('info', function(logg) {
    return console.log(logg);
  });
  socket.emit('map', function(map) {
    return create_map(map);
  });
  socket.emit('tanks', function(tanks_json) {
    var tank, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = tanks_json.length; _i < _len; _i++) {
      tank = tanks_json[_i];
      _results.push(draw_tank(tank));
    }
    return _results;
  });
  $('#start').bind('click', function() {
    if (!start) {
      console.log('start');
      socket.emit('start');
      return stop = false;
    }
  });
  return $('#stop').bind('click', function() {
    if (!stop) {
      console.log('stop');
      socket.emit('stop');
      return start = false;
    }
  });
});

//# sourceMappingURL=data:application/json;base64,